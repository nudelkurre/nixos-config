# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
    imports =
        [ (modulesPath + "/installer/scan/not-detected.nix")
        ];

    boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
    boot.initrd.kernelModules = [ "amdgpu" ];
    boot.kernelModules = [ "kvm-intel" ];
    boot.extraModulePackages = [ ];

    fileSystems = {
        "/" = {
            device = "/dev/disk/by-label/ROOT";
            fsType = "ext4";
        };
        "/boot" = {
            device = "/dev/disk/by-label/BOOT";
            fsType = "vfat";
            options = ["umask=0077"];
        };
        "/home/emil/tmp" = {
            fsType = "tmpfs";
            options = [ "rw" "size=10G" "nodev" "nosuid" "noexec" "uid=1000" "gid=1000" ];
        };
        "/home/emil/docker-compose" = {
            device = "172.16.0.12:/nfs/docker/compose";
            fsType = "nfs";
            options = [ "rw" "x-systemd.automount" "noauto" ];
        };
        "/home/emil/Manga" = {
            device = "172.16.0.12:/nfs/Manga";
            fsType = "nfs";
            options = [ "rw" "x-systemd.automount" "noauto" ];
        };
        "/home/emil/Media" = {
            device = "172.16.0.12:/nfs/Media";
            fsType = "nfs";
            options = [ "rw" "x-systemd.automount" "noauto" ];
        };
        "/home/emil/roms" = {
            device = "172.16.0.12:/nfs/ROMS";
            fsType = "nfs";
            options = [ "ro" "x-systemd.automount" "noauto" ];
        };
    };

    boot.initrd.luks.devices = {
        "encrypted" = {
            device = "/dev/disk/by-label/encrypted";
        };
    };

    swapDevices = [ ];

    networking.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
