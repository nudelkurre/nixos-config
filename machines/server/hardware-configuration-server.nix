# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
    imports =
        [ (modulesPath + "/installer/scan/not-detected.nix")
        ];

    boot = {
        extraModulePackages = [ ];
        initrd = {
            availableKernelModules = [ "xhci_pci" "ahci" "ohci_pci" "ehci_pci" "pata_atiixp" "usbhid" "usbcore" "usb_storage" "sd_mod" ];
            kernelModules = [ ];
            luks = {
                devices = {
                    "encrypted" = {
                        device = "/dev/disk/by-label/encrypted_root";
                        keyFile = "/key/key.bin";
                    };
                };
            };
            systemd = {
                mounts = [
                    {
                        what = "/dev/disk/by-label/Key";
                        where = "/key";
                        type = "ext4";
                    }
                ];
            };
        };
        kernelModules = [ "kvm-amd" "nct6775" ];
    };

    environment = {
        etc = {
            crypttab = {
                text = ''
                    files /dev/disk/by-label/encrypted_files /etc/crypto.key
                '';
            };
        };
    };

    fileSystems = {
        "/" = {
            device = "/dev/disk/by-label/ROOT";
            fsType = "ext4";
        };
        "/boot" = {
            device = "/dev/disk/by-label/BOOT";
            fsType = "vfat";
            options = ["umask=0077"];
        };
        "/nfs" = {
            device = "/dev/disk/by-label/files";
            fsType = "ext4";
        };
    };

    hardware = {
        cpu = {
            amd = {
                updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
            };
        };
    };

    networking = {
        useDHCP = lib.mkDefault true;
    };

    nixpkgs = {
        hostPlatform = lib.mkDefault "x86_64-linux";
    };

    swapDevices = [ ];

}
